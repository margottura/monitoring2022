#set the working directory
setwd("C:/Documenti/Laurea magistrale/Tirocinio Duccio")

#upload all the packages
library(raster)
library(sp)
library(readr)
library(terra)
library(rgdal)
library(sf)
library(ecospat)
library(rgbif)
library(maptools)
library(devtools)
library(ade4)
library(ape)
library(biomod2)
library(virtualspecies)
library(viridis)
library(geodata)
library(corrplot)
library(ggcorrplot)
library(factoextra)
library(FactoMineR)
library(ggplot2)
library(tidyverse)

#load the cvs file with mangroves data
m_occ <- read.csv("m_occ.csv", sep="\t")
m_occ

#let's keep only the data for lat, long and year of observation
m_subset <- m_occ[, c("decimalLatitude", "decimalLongitude", "year")]
m_subset

#import shapefile from qgis using the terra package
m_shp <- vect("C:/Documenti/Laurea magistrale/Tirocinio Duccio/mangroves_shapefile.shp")
plot(m_shp)

#download data from worldclim
wclim <- geodata::worldclim_global(var="bio", res=10, versione="2.1", path = "C:/Documenti/Laurea magistrale/Tirocinio Duccio")
wclim

#Brisbane wordlclim data
wclim_aus <- worldclim_country("AUS", var="bio", res=10, versione="2.1", path="C:/Documenti/Laurea magistrale/Tirocinio Duccio")
wclim_aus
names(wclim_aus)<- c("Annual Mean Temperature", "Mean Diurnal Range", "Isothermality", "Temperature Seasonality", "Max Temperature of Warmest Month", "Min Temperature of Coldest Month", "Temperature Annual Range", "Mean Temperature of Wettest Quarter", "Mean Temperature of Driest Quarter", "Mean Temperature of Warmest Quarter", "Mean Temperature of Coldest Quarter", "Annual Precipitation", "Precipitation of Wettest Month", "Precipitation of Driest Month", "Precipitation Seasonality", "Precipitation of Wettest Quarter", "Precipitation of Driest Quarter", "Precipitation of Warmest Quarter", "Precipitation of Coldest Quarter")

#crop for Brisbane area (lat min 153, lat max 153.5, lon min -27.5, lon max -27.1)
bne_ext <- c(153, 153.5, -27.5, -27.1)
ext <- extent(bne_ext[1], bne_ext[2], bne_ext[3], bne_ext[4])

wclim_bne <- crop(wclim_aus, ext)
wclim_bne
plot(wclim_bne)


#create a stack of raster with bne wclim data
bne_stack <- stack(wclim_bne)
bne_stack

#plot the data using viridis
plot(bne_stack[[2]], col=viridis(500, alpha =1, begin=0, end=1, direction=1))
title("Mean Diurnal Range")
points(m_shp, pch=16, col= 9, cex=1)

plot(bne_stack, col=viridis(500, alpha =1, begin=0, end=1, direction=1))

#######################################
#statistical analysis
#1. correlation matrix (shows which variables are strongly associated)
# Subsample 10% of pixels and calculate pairwise correlations

r1 <- bne_stack$Annual.Mean.Temperature
cor <- cor(sampleRandom(bne_stack, size=ncell(r1)*0.30), method="pearson")
cor

#plot the correlation matrix
df <- corrplot(cor, method="number", col=viridis(30, alpha=1, begin=0, end=1, direction=1), type="lower", tl.pos='ld')
)

bne_stack_subset <- bne_stack[[c(1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19)]]
r1.1 <- bne_stack_subset$Annual.Mean.Temperature
cor1 <- cor(sampleRandom(bne_stack_subset, size=ncell(r1)*0.30), method="pearson")
cor1
df1 <- corrplot(cor1, method="number", col=viridis(30, alpha=1, begin=0, end=1, direction=1), type="lower", tl.pos='ld')
)

#the least correlated are: Precipitation.of.Coldest.Quarter(bio19), Max.Temperature.of.Warmest.Month (bio5), Precipitation.of.Driest.Quarter (bio17)
#Mean.Temperature.of.Wettest.Quarter (bio10), Min.Temperature.of.Coldest.Month (bio6), Mean.Diurnal.Range (bio2), Isothermality (bio3)

#select only some variables

bne_stack <- bne_stack[[c(2,3,5,6,10,17,19)]]
bne_stack

plot(bne_stack, col=viridis(500, alpha =1, begin=0, end=1, direction=1))



#2. PCA (principal component analysis) (seguito dal tutorial sulla PCA)
#normalize the data
#make a dataframe of bne wclim data
bne_subset <- wclim_bne[[c("Precipitation of Coldest Quarter", "Max Temperature of Warmest Month", "Precipitation of Driest Quarter",
                          "Mean Temperature of Wettest Quarter","Min Temperature of Coldest Month", "Mean Diurnal Range", "Isothermality")]]
bne_subset

bne_df <- as.data.frame(bne_subset)
bne_num <- bne_df[,]
head(bne_num)
bne_norm <- scale(bne_num)
head(bne_norm)

#correlation matrix with normalized data
cor_norm <- cor(bne_norm)
ggcorrplot(bne_norm)

#apply PCA
bne_pca <- princomp(cor_norm)
summary(bne_pca)
bne_pca$loadings[, 1:2]

#data visualization
# scree plot
fviz_eig(bne_pca, addlabels=TRUE)

#biplot of the attributes
fviz_pca_var(bne_pca, col.var="black")

#contribution of each variable
fviz_cos2(bne_pca, choice="var", axes= 1:2)

#biplot combined with cos2
fviz_pca_var(bne_pca, col.var = "cos2",
             gradient.cols = c("black", "blue", "red"),
             repel = TRUE)

###########################################
#random species generation
#suitability map generation
random.sp <- generateRandomSp(raster.stack=bne_stack, convert.to.PA=FALSE, species.type="multiplicative",
                              approach="random", relations="gaussian", realistic.sp=TRUE, plot=FALSE)


plot(random.sp$suitab.raster, col = viridis(500, alpha=1, begin=0, end=1, direction=1))

#let's visualize the variables contribution
plotResponse(random.sp)

#presence/absence
bne_pres <- convertToPA(random.sp, beta="random", alpha= -0.5, plot=FALSE, species.prevalence= 0.1)

#plot the realized niche
plot(bne_pres$pa.raster)

#occurrences
bne_pres$pa.raster %>% raster()
pres_points <- sampleOccurrences(bne_pres, n=100, type= "presence only", sample.prevalence = 0.9, error.probability=0, 
                                 detection.probability=1, correct.by.suitability=TRUE, plot=FALSE)
plot(bne_stack[[1]], col=viridis(500, alpha=1, begin=0, end=1, direction=1))
points(pres_points$sample.points, col="black", pch=19)


######niche analysis
#preliminary steps for niche analysis
#raster layer to create the realized niche
bne_raster <- bne_pres$pa.raster %>% raster()

#extract bioclim layers one by one from the stack
r1 <- bne_stack$Mean.Diurnal.Range
r2 <- bne_stack$Isothermality
r3 <- bne_stack$Max.Temperature.of.Warmest.Month
r4 <- bne_stack$Min.Temperature.of.Coldest.Month
r5 <- bne_stack$Mean.Temperature.of.Warmest.Quarter
r6 <- bne_stack$Precipitation.of.Driest.Quarter
r7 <- bne_stack$Precipitation.of.Coldest.Quarter

#create a stack with the bioclimatic variable and the raster of the realized niche
stack_pa <- brick(r1,r2,r3,r4,r5,r6,r7,bne_raster)

#extract values from the stack, convert into dataframe, retain only presence pixels (1)
values <- stack_pa%>% rasterToPoints()%>% as.data.frame()
filtered_pa <- values%>% filter(., lyr.1==1)%>% as.data.frame()

#convert to a raster 
raster_pa <- filtered_pa%>% .[, -10]%>% rasterFromXYZ()
raster_pa
plot(raster_pa)

#repeat for occurrence points
#create a dataset, only keep rows satisfying Real =1 and Observed =1
dataset_occ <- pres_points$sample.points%>%as.data.frame()%>%.[.$Real == 1 & .$Observed == 1, ]

#environmental viarables associated with occurrences using coordinates
stack_occ <- brick(r1,r2,r3,r4,r5,r6,r7)
stack_occ
values_occ <- stack_occ%>%rasterToPoints()%>%as.data.frame()
filtered_occ <- merge(values_occ, dataset_occ, by=c("x", "y"))
raster_occ <- filtered_occ %>% .[,-(10:11)]%>%rasterFromXYZ()

#calculate basic statistics
bne_stats <- apply(filtered_occ, 2, function(x) c(min=min(x), median(x), mean=mean(x), max=max(x), sd=sd(x)))
bne_stats

#calculate spatial autocorrelation 
ecospat.mantel.correlogram(dfvar=filtered_occ[c(1:9)], colxy=8:9, n=100, colvar=1:7, max=10, nclass=10, nperm=100)

#niche overlapping
#create dataframe
env_pa <- getValues(raster_pa)
env_occ <- getValues(raster_occ)

#remove missing values
env_pa <- env_pa[complete.cases(env_pa),]
env_occ <- env_occ[complete.cases(env_occ),]

#produce global environment background data
globalEnvM <- rbind(env_pa, env_occ)

#apply PCA on the global data
pca.clim <- dudi.pca(globalEnvM, center=TRUE, scale=TRUE, scannf=FALSE, nf=2)

#two-dimensional summary of env variability
global.scores <- pca.clim$li

#map the obs data into a two-dimensional space
pa.scores <- suprow(pca.clim, data.frame(filtered_pa)[,colnames(globalEnvM)])$li
occ.scores <- suprow(pca.clim, data.frame(filtered_occ)[, colnames(globalEnvM)])$li

pa.scores1 <- suprow(pca.clim, env_pa)$li
occ.scores1 <- suprow(pca.clim, env_occ)$li

#calculate occurrence density grid
pagrid <- ecospat.grid.clim.dyn(global.scores, pa.scores, pa.scores1)
occgrid <- ecospat.grid.clim.dyn(global.scores, occ.scores, occ.scores1)

#plot the niche category
ecospat.plot.niche.dyn(pagrid, occgrid, quant=0.1, interest=2, name.axis1="PC1", name.axis2="PC2")

#calculate niche overlap
ecospat.niche.overlap(pagrid, occgrid, cor=T)

#$D
#[1] 1

#download future wclim data from CMIP6
wclim_future <- geodata::cmip6_world("ACCESS-CM2", "370", "2021-2040", var="bioc", res=10, path="C:/Documenti/Laurea magistrale/Tirocinio Duccio")
names(wclim_future)<- c("Annual Mean Temperature", "Mean Diurnal Range", "Isothermality", "Temperature Seasonality", "Max Temperature of Warmest Month", "Min Temperature of Coldest Month", "Temperature Annual Range", "Mean Temperature of Wettest Quarter", "Mean Temperature of Driest Quarter", "Mean Temperature of Warmest Quarter", "Mean Temperature of Coldest Quarter", "Annual Precipitation", "Precipitation of Wettest Month", "Precipitation of Driest Month", "Precipitation Seasonality", "Precipitation of Wettest Quarter", "Precipitation of Driest Quarter", "Precipitation of Warmest Quarter", "Precipitation of Coldest Quarter")

wclim_future <- wclim_future[[c(2,3,5,6,10,17,19)]]
plot(wclim_future)
summary(wclim_future)

wclim_future_bne <- crop(wclim_future, ext)
summary(wclim_future_bne)
plot(wclim_future_bne)
bne_stack_future <- stack(wclim_future_bne)
  
#we only keep the variables we need
bne_stack_future <- bne_stack_future[[c(2,3,5,6,10,17,19)]]
bne_stack_future
summary(bne_stack_future)

#GLM

#bne_stack is the bioclim stack
#let's extract the raster values for the positions of occurrences
presence_data_extracted <- raster::extract(bne_stack, m_subset[, c("decimalLongitude", "decimalLatitude")])

presence_data <- data.frame(m_subset[, c("decimalLongitude", "decimalLatitude")], presence_data_extracted)
presence_data
presence_data <- na.omit(presence_data)


#let's add the presence column
presence_data$species_presence <- 1

#let's create a logistic regression model
logistic_regr_model <- glm(species_presence~ ., family=binomial(link="logit"), data=presence_data)
summary(logistic_regr_model)

#let's make predictions
predictions <- predict(logistic_regr_model, presence_data, type= "response")
print(predictions)

present_loc <- presence_data[presence_data$species_presence == 1, c("decimalLongitude", "decimalLatitude")]
plot(predictions, ext = ext)
points(present_loc$decimalLongitude, present_loc$decimalLatitude, pch = '+', col = 'red', cex = 0.5)


#$I
#[1] 1

#plot the variable contribution
ecospat.plot.contrib(contrib=pca.clim$co, eigen=pca.clim$eig)
